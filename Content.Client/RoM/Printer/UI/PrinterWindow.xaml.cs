using Content.Shared.RoM.Printer;
using Content.Shared.RoM.Printer.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.RoM.Printer.UI;

[GenerateTypedNameReferences]
public sealed partial class PrinterWindow : DefaultWindow
{
    [Dependency] private readonly IPrototypeManager _prototype = default!;
    public event Action? OnPrintButtonPress;
    public event Action<string>? OnDocumentItemPress;

    public PrinterWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        PrintButton.OnPressed += _ => OnPrintButtonPress?.Invoke();
    }

    public void UpdateState(PrintUiState state)
    {
        DocList.Clear();
        foreach (var doc in _prototype.EnumeratePrototypes<DocumentPrototype>())
        {
            var item = DocList.AddItem(Loc.GetString(doc.Name));
            item.OnSelected += _ => OnDocumentItemPress?.Invoke(doc.ID);
        }

        if (state.IsPaperInserted)
        {
            PaperStatus.Text = Loc.GetString("printer-ui-paper-inserted");
            PaperStatus.FontColorOverride = Color.Green;
        }
        else
        {
            PaperStatus.Text = Loc.GetString("printer-ui-paper-not-inserted");
            PaperStatus.FontColorOverride = Color.Red;
        }
    }
}
